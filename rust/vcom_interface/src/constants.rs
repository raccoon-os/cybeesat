pub const PART_INFO: &[u8] = &[0x01];
pub const POWER_UP: &[u8] = &[0x02, 0x01, 0x01, 0x01, 0x8C, 0xBA, 0x80]; /* 26.000.000 Hz */

pub const GPIO_PIN_CFG_TXANT1: &[u8] = &[0x13, 0x02, 0x09, 0x03, 0x0F, 0x27, 0x0B, 0x20]; /* TX: Ant1, RX: Ant2 */
pub const GPIO_PIN_CFG_TXANT2: &[u8] = &[0x13, 0x03, 0x09, 0x02, 0x0F, 0x27, 0x0B, 0x20]; /* TX: Ant2, RX: Ant1 */
pub const GPIO_PIN_CFG_DIV: &[u8] = &[0x13, 0x16, 0x09, 0x17, 0x0F, 0x27, 0x0B, 0x20]; /* Antenna diversity  */

pub const GET_ADC_READING: &[u8] = &[0x14, 0x18, 0xB9];
pub const FIFO_INFO_RESET: &[u8] = &[0x15, 0x03];
pub const RF_IRCAL_1: &[u8] = &[0x17, 0x56, 0x10, 0xCA, 0xF0];
pub const RF_IRCAL_2: &[u8] = &[0x17, 0x13, 0x10, 0xCA, 0xF0];
pub const GET_INT_STATUS: &[u8] = &[0x20, 0x00, 0x00, 0x00];
pub const GET_MODEM_STATUS: &[u8] = &[0x22, 0xFF];
pub const GET_CHIP_STATUS: &[u8] = &[0x23, 0x7F];
pub const RF_START_RX: &[u8] = &[0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
pub const CHANGE_STATE_READY: &[u8] = &[0x34, 0x03];
pub const CHANGE_STATE_SLEEP: &[u8] = &[0x34, 0x01];
pub const OFFLINE_RECAL: &[u8] = &[0x38, 0x00];
pub const OFFLINE_RECAL2: &[u8] = &[0x38, 0x02];
pub const WRITE_TX_FIFO_DUMMY: &[u8] = &[0x66, 0x00];

/******************************************************************************/

pub const SET_PROPERTY_00: &[u8] = &[0x11, 0x00, 0x04, 0x00, 0x00, 0x00, 0x18, 0x60]; // GLOBAL
pub const SET_PROPERTY_01: &[u8] = &[0x11, 0x01, 0x02, 0x00, 0x01, 0x33]; // INT_CTL
// pub const command SET_PROPERTY_02 :&[u8]= {.len= 8, .rlen=0, .cmd={0x11, 0x02, 0x04, 0x00,  0x00, 0x00, 0x00, 0x00}}; // FRR_CTL
pub const SET_PROPERTY_10: &[u8] = &[
    0x11, 0x10, 0x09, 0x00, 0x0B, 0x14, 0x00, 0x0F, 0x31, 0x00, 0x00, 0x00, 0x00,
]; // PREAMBLE
pub const SET_PROPERTY_11: &[u8] = &[0x11, 0x11, 0x05, 0x00, 0x01, 0xB4, 0x2B, 0x00, 0x00]; // SYNC_CONFIG

//pub const command SET_PROPERTY_12 :&[u8]= {.len= 6, .rlen=0, .cmd={0x11, 0x12, 0x02, 0x0B,  0x30, 0x}}; // FIFO thresholds

// Property group ID 0x20 (MODEM):
pub const SET_PROPERTY_20a: &[u8] = &[
    0x11, 0x20, 0x0C, 0x00, 0x03, 0x00, 0x07, 0x00, 0xBB, 0x80, 0x05, 0x8C, 0xBA, 0x80, 0x00, 0x00,
];
pub const SET_PROPERTY_20b: &[u8] = &[0x11, 0x20, 0x01, 0x0C, 0x49];
pub const SET_PROPERTY_20c: &[u8] = &[
    0x11, 0x20, 0x08, 0x18, 0x01, 0x00, 0x08, 0x02, 0x80, 0x00, 0xB0, 0x10,
];
pub const SET_PROPERTY_20d: &[u8] = &[
    0x11, 0x20, 0x09, 0x22, 0x00, 0xE2, 0x02, 0x44, 0xC0, 0x04, 0x88, 0x02, 0x00,
];
pub const SET_PROPERTY_20e: &[u8] = &[
    0x11, 0x20, 0x07, 0x2C, 0x00, 0x12, 0xC0, 0x05, 0x23, 0x95, 0xE0,
];
pub const SET_PROPERTY_20f: &[u8] = &[0x11, 0x20, 0x01, 0x35, 0xE2];
pub const SET_PROPERTY_20g: &[u8] = &[
    0x11, 0x20, 0x09, 0x38, 0x11, 0x31, 0x31, 0x00, 0x1A, 0x20, 0x00, 0x00, 0x29,
];
pub const SET_PROPERTY_20h: &[u8] = &[
    0x11, 0x20, 0x09, 0x42, 0xA4, 0x03, 0xD6, 0x03, 0x00, 0x2A, 0x02, 0x84, 0xFF,
];
pub const SET_PROPERTY_20i: &[u8] = &[0x11, 0x20, 0x01, 0x4C, 0x02];
pub const SET_PROPERTY_20j: &[u8] = &[0x11, 0x20, 0x01, 0x4E, 0x40];
pub const SET_PROPERTY_20k: &[u8] = &[0x11, 0x20, 0x01, 0x51, 0x0D];

pub const SET_PROPERTY_20a_ir: &[u8] = &[
    0x11, 0x20, 0x0C, 0x00, 0x03, 0x00, 0x03, 0x02, 0x71, 0x00, 0x05, 0x8C, 0xBA, 0x80, 0x00, 0x00,
];
pub const SET_PROPERTY_20b_ir: &[u8] = &[
    0x11, 0x20, 0x0A, 0x18, 0x01, 0x00, 0x08, 0x03, 0x80, 0x00, 0xB0, 0x10, 0x0C, 0xE8,
];
pub const SET_PROPERTY_20c_ir: &[u8] = &[
    0x11, 0x20, 0x0A, 0x29, 0x02, 0xC0, 0x08, 0x00, 0x12, 0x00, 0x28, 0x01, 0x7C, 0xA0,
];
pub const SET_PROPERTY_20d_ir: &[u8] = &[
    0x11, 0x20, 0x0C, 0x38, 0x11, 0x0F, 0x0F, 0x80, 0x1A, 0x20, 0x00, 0x00, 0x28, 0x0C, 0xA4, 0x23,
];
pub const SET_PROPERTY_20e_ir: &[u8] = &[
    0x11, 0x20, 0x0A, 0x45, 0x03, 0x00, 0x99, 0x01, 0x80, 0xFF, 0x06, 0x09, 0x10, 0x40,
];
pub const SET_PROPERTY_20f_ir: &[u8] = &[0x11, 0x20, 0x02, 0x50, 0x94, 0x0A];
pub const SET_PROPERTY_20g_ir: &[u8] = &[0x11, 0x20, 0x02, 0x54, 0x03, 0x07];
pub const SET_PROPERTY_20h_ir: &[u8] = &[0x11, 0x20, 0x05, 0x5B, 0x40, 0x04, 0x04, 0x78, 0x20];
pub const SET_PROPERTY_20i_ir: &[u8] = &[
    0x11, 0x20, 0x07, 0x22, 0x00, 0x44, 0x07, 0x8F, 0xD5, 0x00, 0x00,
];

pub const Baud100_Rate: &[u8] = &[0x11, 0x20, 0x03, 0x03, 0x00, 0x0F, 0xA0];
pub const Baud300_Rate: &[u8] = &[0x11, 0x20, 0x03, 0x03, 0x00, 0x2E, 0xE0];
pub const Baud600_Rate: &[u8] = &[0x11, 0x20, 0x03, 0x03, 0x00, 0x5D, 0xC0];
pub const Baud1200_Rate: &[u8] = &[0x11, 0x20, 0x03, 0x03, 0x00, 0xBB, 0x80];
pub const Baud2400_Rate: &[u8] = &[0x11, 0x20, 0x03, 0x03, 0x01, 0x77, 0x00];
pub const Baud4800_Rate: &[u8] = &[0x11, 0x20, 0x03, 0x03, 0x02, 0xEE, 0x00];
pub const Baud9600_Rate: &[u8] = &[0x11, 0x20, 0x03, 0x03, 0x05, 0xDC, 0x00];

pub const Baud100_Dev: &[u8] = &[0x11, 0x20, 0x01, 0x0C, 0x02]; // frequency deviation:   24.8 Hz (-0.8%, target:   25 Hz)
pub const Baud300_Dev: &[u8] = &[0x11, 0x20, 0x01, 0x0C, 0x06]; // frequency deviation:   74.4 Hz (-0.8%, target:   75 Hz)
pub const Baud600_Dev: &[u8] = &[0x11, 0x20, 0x01, 0x0C, 0x0C]; // frequency deviation:  148.8 Hz (-0.8%, target:  150 Hz)
pub const Baud1200_Dev: &[u8] = &[0x11, 0x20, 0x01, 0x0C, 0x18]; // frequency deviation:  297.5 Hz (-0.8%, target:  300 Hz)
pub const Baud2400_Dev: &[u8] = &[0x11, 0x20, 0x01, 0x0C, 0x30]; // frequency deviation:  595.1 Hz (-0.8%, target:  600 Hz)
pub const Baud4800_Dev: &[u8] = &[0x11, 0x20, 0x01, 0x0C, 0x61]; // frequency deviation: 1202.6 Hz (+0.2%, target: 1200 Hz)
pub const Baud9600_Dev: &[u8] = &[0x11, 0x20, 0x01, 0x0C, 0xC2]; // frequency deviation: 2405.2 Hz (+0.2%, target: 2400 Hz)
pub const IRCAL_Dev: &[u8] = &[0x11, 0x20, 0x01, 0x0C, 0x51]; // frequency deviation: 1004.2 Hz (+0.4%, target: 1000 Hz)

pub const Baud100_Dec_BCR: &[u8] = &[
    0x11, 0x20, 0x0B, 0x1E, 0xF0, 0x10, 0x14, 0xE8, 0x05, 0x4A, 0x00, 0x60, 0xCB, 0x00, 0x61,
];
pub const Baud300_Dec_BCR: &[u8] = &[
    0x11, 0x20, 0x0B, 0x1E, 0xF0, 0x10, 0x14, 0xE8, 0x01, 0xC3, 0x01, 0x22, 0x60, 0x01, 0x23,
];
pub const Baud600_Dec_BCR: &[u8] = &[
    0x11, 0x20, 0x0B, 0x1E, 0xF0, 0x10, 0x14, 0xE8, 0x00, 0xE2, 0x02, 0x44, 0xC0, 0x02, 0x44,
];
pub const Baud1200_Dec_BCR_wb: &[u8] = &[
    0x11, 0x20, 0x0B, 0x1E, 0xF0, 0x20, 0x0C, 0xE8, 0x00, 0xA9, 0x03, 0x06, 0x55, 0x03, 0x08,
];
pub const Baud1200_Dec_BCR_nb: &[u8] = &[
    0x11, 0x20, 0x0B, 0x1E, 0xF0, 0x10, 0x0C, 0xE8, 0x00, 0x71, 0x04, 0x89, 0x80, 0x04, 0x88,
];
pub const Baud2400_Dec_BCR_wb: &[u8] = &[
    0x11, 0x20, 0x0B, 0x1E, 0xB0, 0x10, 0x0C, 0xE8, 0x00, 0x71, 0x04, 0x89, 0x80, 0x04, 0x88,
];
pub const Baud2400_Dec_BCR_nb: &[u8] = &[
    0x11, 0x20, 0x0B, 0x1E, 0xF0, 0x20, 0x0C, 0xE8, 0x00, 0x55, 0x06, 0x0C, 0xAB, 0x06, 0x06,
];
pub const Baud4800_Dec_BCR: &[u8] = &[
    0x11, 0x20, 0x0B, 0x1E, 0xB0, 0x20, 0x0C, 0xE8, 0x00, 0x55, 0x06, 0x0C, 0xAB, 0x06, 0x06,
];
pub const Baud9600_Dec_BCR: &[u8] = &[
    0x11, 0x20, 0x0B, 0x1E, 0x70, 0x20, 0x00, 0xE8, 0x00, 0x55, 0x06, 0x0C, 0xAB, 0x06, 0x06,
];

pub const Baud100_AFC: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x01, 0x21, 0x02];
pub const Baud300_AFC: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x01, 0x21, 0x02];
pub const Baud600_AFC: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x01, 0x21, 0x02];
pub const Baud1200_AFC_wb: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x02, 0x1B, 0x7D];
pub const Baud1200_AFC_nb: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x02, 0x10, 0x81];
pub const Baud2400_AFC_wb: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x03, 0x13, 0xC4];
pub const Baud2400_AFC_nb: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x03, 0x0D, 0x3B];
pub const Baud4800_AFC_wb: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x06, 0x0D, 0x3A];
pub const Baud4800_AFC_nb: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x06, 0x0A, 0xB6];
pub const Baud9600_AFC_wb: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x0C, 0x0A, 0xB4];
pub const Baud9600_AFC_nb: &[u8] = &[0x11, 0x20, 0x03, 0x2F, 0x0C, 0x09, 0xAD];

pub const Baud100_AGC: &[u8] = &[0x11, 0x20, 0x02, 0x39, 0xFF, 0xFF];
pub const Baud300_AGC: &[u8] = &[0x11, 0x20, 0x02, 0x39, 0x63, 0x63];
pub const Baud600_AGC: &[u8] = &[0x11, 0x20, 0x02, 0x39, 0x31, 0x31];
pub const Baud1200_AGC_wb: &[u8] = &[0x11, 0x20, 0x02, 0x39, 0x25, 0x25];
pub const Baud1200_AGC_nb: &[u8] = &[0x11, 0x20, 0x02, 0x39, 0x19, 0x19];
pub const Baud2400_AGC_wb: &[u8] = &[0x11, 0x20, 0x02, 0x39, 0x19, 0x19];
pub const Baud2400_AGC_nb: &[u8] = &[0x11, 0x20, 0x02, 0x39, 0x13, 0x13];
pub const Baud4800_AGC: &[u8] = &[0x11, 0x20, 0x02, 0x39, 0x13, 0x13];
pub const Baud9600_AGC: &[u8] = &[0x11, 0x20, 0x02, 0x39, 0x13, 0x13];

pub const Baud100_EYE: &[u8] = &[0x11, 0x20, 0x01, 0x47, 0x08];
pub const Baud300_EYE: &[u8] = &[0x11, 0x20, 0x01, 0x47, 0x17];
pub const Baud600_EYE: &[u8] = &[0x11, 0x20, 0x01, 0x47, 0x2E];
pub const Baud1200_EYE_wb: &[u8] = &[0x11, 0x20, 0x01, 0x47, 0x3D];
pub const Baud1200_EYE_nb: &[u8] = &[0x11, 0x20, 0x01, 0x47, 0x5C];
pub const Baud2400_EYE_wb: &[u8] = &[0x11, 0x20, 0x01, 0x47, 0x5C];
pub const Baud2400_EYE_nb: &[u8] = &[0x11, 0x20, 0x01, 0x47, 0x7B];
pub const Baud4800_EYE: &[u8] = &[0x11, 0x20, 0x01, 0x47, 0x7B];
pub const Baud9600_EYE: &[u8] = &[0x11, 0x20, 0x01, 0x47, 0x7B];

pub const Baud100_DSA: &[u8] = &[0x11, 0x20, 0x01, 0x5D, 0x07];
pub const Baud300_DSA: &[u8] = &[0x11, 0x20, 0x01, 0x5D, 0x06];
pub const Baud600_DSA: &[u8] = &[0x11, 0x20, 0x01, 0x5D, 0x04];
pub const Baud1200_DSA: &[u8] = &[0x11, 0x20, 0x01, 0x5D, 0x05];
pub const Baud2400_DSA: &[u8] = &[0x11, 0x20, 0x01, 0x5D, 0x04];
pub const Baud4800_DSA: &[u8] = &[0x11, 0x20, 0x01, 0x5D, 0x04];
pub const Baud9600_DSA: &[u8] = &[0x11, 0x20, 0x01, 0x5D, 0x04];

// Property Group ID 0x21 (MOD&EM_CHFLT):

pub const SET_PROPERTY_21a: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0xCC, 0xA1, 0x30, 0xA0, 0x21, 0xD1, 0xB9, 0xC9, 0xEA, 0x05, 0x12, 0x11,
];
pub const SET_PROPERTY_21b: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0x0A, 0x04, 0x15, 0xFC, 0x03, 0x00, 0xA2, 0xA0, 0x97, 0x8A, 0x79, 0x66,
];
pub const SET_PROPERTY_21c: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0x52, 0x3F, 0x2E, 0x1F, 0x14, 0x0B, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00,
];

pub const Baud100_Fil1: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0xFF, 0xC4, 0x30, 0x7F, 0xF5, 0xB5, 0xB8, 0xDE, 0x05, 0x17, 0x16, 0x0C,
];
pub const Baud100_Fil2: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0x03, 0x00, 0x15, 0xFF, 0x00, 0x00, 0xA2, 0xA0, 0x97, 0x8A, 0x79, 0x66,
];
pub const Baud100_Fil3: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0x52, 0x3F, 0x2E, 0x1F, 0x14, 0x0B, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00,
];

pub const Baud300_Fil1: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0xFF, 0xC4, 0x30, 0x7F, 0xF5, 0xB5, 0xB8, 0xDE, 0x05, 0x17, 0x16, 0x0C,
];
pub const Baud300_Fil2: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0x03, 0x00, 0x15, 0xFF, 0x00, 0x00, 0xA2, 0xA0, 0x97, 0x8A, 0x79, 0x66,
];
pub const Baud300_Fil3: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0x52, 0x3F, 0x2E, 0x1F, 0x14, 0x0B, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00,
];

pub const Baud600_Fil1: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0xFF, 0xC4, 0x30, 0x7F, 0xF5, 0xB5, 0xB8, 0xDE, 0x05, 0x17, 0x16, 0x0C,
];
pub const Baud600_Fil2: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0x03, 0x00, 0x15, 0xFF, 0x00, 0x00, 0xA2, 0xA0, 0x97, 0x8A, 0x79, 0x66,
];
pub const Baud600_Fil3: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0x52, 0x3F, 0x2E, 0x1F, 0x14, 0x0B, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00,
];

pub const Baud1200_Fil1_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0xFF, 0xBA, 0x0F, 0x51, 0xCF, 0xA9, 0xC9, 0xFC, 0x1B, 0x1E, 0x0F, 0x01,
];
pub const Baud1200_Fil2_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0xFC, 0xFD, 0x15, 0xFF, 0x00, 0x0F, 0xD6, 0xD0, 0xBE, 0xA3, 0x82, 0x61,
];
pub const Baud1200_Fil3_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0x41, 0x27, 0x13, 0x06, 0xFF, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0xF0, 0x0F,
];

pub const Baud1200_Fil1_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0xFF, 0xC4, 0x30, 0x7F, 0xF5, 0xB5, 0xB8, 0xDE, 0x05, 0x17, 0x16, 0x0C,
];
pub const Baud1200_Fil2_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0x03, 0x00, 0x15, 0xFF, 0x00, 0x00, 0x23, 0x17, 0xF4, 0xC2, 0x88, 0x50,
];
pub const Baud1200_Fil3_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0x21, 0xFF, 0xEC, 0xE6, 0xE8, 0xEE, 0xF6, 0xFB, 0x05, 0xC0, 0xFF, 0x0F,
];

pub const Baud2400_Fil1_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0xCC, 0xA1, 0x30, 0xA0, 0x21, 0xD1, 0xB9, 0xC9, 0xEA, 0x05, 0x12, 0x11,
];
pub const Baud2400_Fil2_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0x0A, 0x04, 0x15, 0xFC, 0x03, 0x00, 0x23, 0x17, 0xF4, 0xC2, 0x88, 0x50,
];
pub const Baud2400_Fil3_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0x21, 0xFF, 0xEC, 0xE6, 0xE8, 0xEE, 0xF6, 0xFB, 0x05, 0xC0, 0xFF, 0x0F,
];

pub const Baud2400_Fil1_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0xA2, 0x81, 0x26, 0xAF, 0x3F, 0xEE, 0xC8, 0xC7, 0xDB, 0xF2, 0x02, 0x08,
];
pub const Baud2400_Fil2_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0x07, 0x03, 0x15, 0xFC, 0x0F, 0x00, 0x5B, 0x47, 0x0F, 0xC0, 0x6D, 0x25,
];
pub const Baud2400_Fil3_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0xF4, 0xDB, 0xD6, 0xDF, 0xEC, 0xF7, 0xFE, 0x01, 0x15, 0xF0, 0xFF, 0x03,
];

pub const Baud4800_Fil1_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0xA2, 0x81, 0x26, 0xAF, 0x3F, 0xEE, 0xC8, 0xC7, 0xDB, 0xF2, 0x02, 0x08,
];
pub const Baud4800_Fil2_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0x07, 0x03, 0x15, 0xFC, 0x0F, 0x00, 0x5B, 0x47, 0x0F, 0xC0, 0x6D, 0x25,
];
pub const Baud4800_Fil3_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0xF4, 0xDB, 0xD6, 0xDF, 0xEC, 0xF7, 0xFE, 0x01, 0x15, 0xF0, 0xFF, 0x03,
];

pub const Baud4800_Fil1_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0x5B, 0x47, 0x0F, 0xC0, 0x6D, 0x25, 0xF4, 0xDB, 0xD6, 0xDF, 0xEC, 0xF7,
];
pub const Baud4800_Fil2_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0xFE, 0x01, 0x15, 0xF0, 0xFF, 0x03, 0x5B, 0x47, 0x0F, 0xC0, 0x6D, 0x25,
];
pub const Baud4800_Fil3_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0xF4, 0xDB, 0xD6, 0xDF, 0xEC, 0xF7, 0xFE, 0x01, 0x15, 0xF0, 0xFF, 0x03,
];

pub const Baud9600_Fil1_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0x5B, 0x47, 0x0F, 0xC0, 0x6D, 0x25, 0xF4, 0xDB, 0xD6, 0xDF, 0xEC, 0xF7,
];
pub const Baud9600_Fil2_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0xFE, 0x01, 0x15, 0xF0, 0xFF, 0x03, 0x5B, 0x47, 0x0F, 0xC0, 0x6D, 0x25,
];
pub const Baud9600_Fil3_wb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0xF4, 0xDB, 0xD6, 0xDF, 0xEC, 0xF7, 0xFE, 0x01, 0x15, 0xF0, 0xFF, 0x03,
];

pub const Baud9600_Fil1_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0x39, 0x2B, 0x00, 0xC3, 0x7F, 0x3F, 0x0C, 0xEC, 0xDC, 0xDC, 0xE3, 0xED,
];
pub const Baud9600_Fil2_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0xF6, 0xFD, 0x15, 0xC0, 0xFF, 0x0F, 0x39, 0x2B, 0x00, 0xC3, 0x7F, 0x3F,
];
pub const Baud9600_Fil3_nb: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0x0C, 0xEC, 0xDC, 0xDC, 0xE3, 0xED, 0xF6, 0xFD, 0x15, 0xC0, 0xFF, 0x0F,
];

pub const IRCAL_Fil1: &[u8] = &[
    0x11, 0x21, 0x0C, 0x00, 0xCC, 0xA1, 0x30, 0xA0, 0x21, 0xD1, 0xB9, 0xC9, 0xEA, 0x05, 0x12, 0x11,
];
pub const IRCAL_Fil2: &[u8] = &[
    0x11, 0x21, 0x0C, 0x0C, 0x0A, 0x04, 0x15, 0xFC, 0x03, 0x00, 0xCC, 0xA1, 0x30, 0xA0, 0x21, 0xD1,
];
pub const IRCAL_Fil3: &[u8] = &[
    0x11, 0x21, 0x0C, 0x18, 0xB9, 0xC9, 0xEA, 0x05, 0x12, 0x11, 0x0A, 0x04, 0x15, 0xFC, 0x03, 0x00,
];

pub const SET_PROPERTY_22: &[u8] = &[
    0x11, 0x22, 0x06, 0x00, 0x04, 0x04, /**/
    0x00, 0x3F, 0x8F, 0x25,
]; // PA
pub const SET_PROPERTY_23: &[u8] = &[
    0x11, 0x23, 0x07, 0x00, 0x2C, 0x0E, 0x0B, 0x04, 0x0C, 0x73, 0x03,
]; // SYNTH_PFDCP_CPFF
pub const SET_PROPERTY_30: &[u8] = &[
    0x11, 0x30, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
]; // MATCH_VALUE

pub const SET_PROPERTY_40: &[u8] = &[
    0x11, 0x40, 0x08, 0x00, 0x42, 0x0A, 0x6E, 0x46, 0x09, 0x74, 0x20, 0xFA,
]; // FREQ_CONTROL

pub const SET_SYNC_WORD: &[u8] = &[
    0x11, 0x11, 0x02, 0x01, 0x2c, 0xcb
];

pub const SET_FREQ: &[u8] = &[
    0x11, 0x40, 0x04, 0x00, 0x42, 0x0a, 0xcc, 0xcd
];

pub const RANDOM_DATA: &[u8] = &[
    0xE2, 0xC4, 0x18, 0xFE, 0x33, 0xC1, 0x91, 0xE1, 0x0A, 0x7D,
    0xDE, 0xD4, 0x53, 0x17, 0xA0, 0x03, 0x7E, 0x3B, 0xC7, 0x23,
    0x85, 0x97, 0x6D, 0xA2, 0x93, 0xC4, 0x73, 0x8D, 0x0B, 0x34,
    0x17, 0x0A, 0xDC, 0xFD, 0x03, 0x39, 0x13, 0x93, 0x56, 0x06,
    0xAE, 0x61, 0x59, 0x9A, 0x57, 0x76, 0xFB, 0xA4, 0xB2, 0xF3,
    0x47, 0x5D, 0x95, 0x4A, 0x7A, 0xE0, 0xB4, 0x18, 0x1F, 0x6E,
    0xD2, 0x0D, 0xA1, 0x6D, 0x7D, 0xFF, 0xAC, 0xA0, 0xC2, 0x7D,
    0xC4, 0xFF, 0xFC, 0x5D, 0x89, 0xEF, 0x5B, 0x5E, 0x29, 0xD5,
    0x1E, 0x31, 0xCF, 0x6D, 0xFC, 0xEE, 0x8A, 0x97, 0x32, 0xC1,
    0x85, 0xD4, 0x02, 0x47, 0x92, 0x72, 0x3F, 0xC6, 0xC3, 0xA2,
    0xC0, 0xB6, 0x0F, 0xE5, 0x7B, 0x99, 0x2A, 0xE2, 0x37, 0x24,
    0x0D, 0x40, 0x4A, 0x59, 0xE1, 0xCD, 0xB6, 0x4B, 0x11, 0x54,
    0x23, 0x36, 0x53, 0x8E, 0x81, 0xCA, 0x18, 0xF5, 0x58, 0x4E,
    0x9D, 0x92, 0x72, 0x1D, 0x90, 0xD7, 0x28, 0x69, 0x56, 0x6D,
    0xDA, 0x58, 0xC4, 0xEF, 0x69, 0x0D, 0xE8, 0x3D, 0x44, 0xC2,
    0xA3, 0x5E, 0xE9, 0x4C, 0xDD, 0x9D, 0x15, 0xEA, 0xA8, 0xC8,
    0x24, 0x32, 0x0C, 0xA6, 0x1F, 0x1F, 0xEF, 0x89, 0x77, 0x73,
    0xA7, 0x51, 0x5D, 0x92, 0x50, 0xAE, 0x3D, 0x7E, 0xD0, 0x92,
    0xD0, 0xBD, 0x15, 0xE9, 0x86, 0x38, 0xC1, 0x70, 0xCC, 0xBD,
    0x42, 0x77, 0xC3, 0x1B, 0x7A, 0x81, 0xBC, 0x94, 0x59, 0x53,
    0xDB, 0x57, 0xAE, 0x0D, 0xAC, 0xCD, 0x7E, 0x7B, 0xB1, 0xE8,
    0x28, 0x88, 0x97, 0x51, 0x78, 0xA7, 0x4E, 0x45, 0x19, 0x79,
    0x51, 0xD7, 0xB9, 0xFE, 0xCE, 0x12, 0xBA, 0xA5, 0x8A, 0xDA,
    0x26, 0x64, 0x68, 0xA4, 0x07, 0x62, 0xEE, 0x1D, 0x40, 0x8B,
    0xCC
];